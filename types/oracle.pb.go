// Code generated by protoc-gen-go. DO NOT EDIT.
// source: oracle.proto

package types

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// EthBridgeClaim is a structure that contains all the data for a particular bridge claim
type OracleClaim struct {
	ID                   string          `protobuf:"bytes,1,opt,name=ID" json:"ID,omitempty"`
	ValidatorAddress     *Chain33Address `protobuf:"bytes,2,opt,name=ValidatorAddress" json:"ValidatorAddress,omitempty"`
	Content              string          `protobuf:"bytes,3,opt,name=Content" json:"Content,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *OracleClaim) Reset()         { *m = OracleClaim{} }
func (m *OracleClaim) String() string { return proto.CompactTextString(m) }
func (*OracleClaim) ProtoMessage()    {}
func (*OracleClaim) Descriptor() ([]byte, []int) {
	return fileDescriptor_oracle_fb14737a8765f4ce, []int{0}
}
func (m *OracleClaim) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OracleClaim.Unmarshal(m, b)
}
func (m *OracleClaim) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OracleClaim.Marshal(b, m, deterministic)
}
func (dst *OracleClaim) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OracleClaim.Merge(dst, src)
}
func (m *OracleClaim) XXX_Size() int {
	return xxx_messageInfo_OracleClaim.Size(m)
}
func (m *OracleClaim) XXX_DiscardUnknown() {
	xxx_messageInfo_OracleClaim.DiscardUnknown(m)
}

var xxx_messageInfo_OracleClaim proto.InternalMessageInfo

func (m *OracleClaim) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *OracleClaim) GetValidatorAddress() *Chain33Address {
	if m != nil {
		return m.ValidatorAddress
	}
	return nil
}

func (m *OracleClaim) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

type AddressArray struct {
	ClaimValidator       []*Chain33Address `protobuf:"bytes,1,rep,name=ClaimValidator" json:"ClaimValidator,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *AddressArray) Reset()         { *m = AddressArray{} }
func (m *AddressArray) String() string { return proto.CompactTextString(m) }
func (*AddressArray) ProtoMessage()    {}
func (*AddressArray) Descriptor() ([]byte, []int) {
	return fileDescriptor_oracle_fb14737a8765f4ce, []int{1}
}
func (m *AddressArray) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddressArray.Unmarshal(m, b)
}
func (m *AddressArray) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddressArray.Marshal(b, m, deterministic)
}
func (dst *AddressArray) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddressArray.Merge(dst, src)
}
func (m *AddressArray) XXX_Size() int {
	return xxx_messageInfo_AddressArray.Size(m)
}
func (m *AddressArray) XXX_DiscardUnknown() {
	xxx_messageInfo_AddressArray.DiscardUnknown(m)
}

var xxx_messageInfo_AddressArray proto.InternalMessageInfo

func (m *AddressArray) GetClaimValidator() []*Chain33Address {
	if m != nil {
		return m.ClaimValidator
	}
	return nil
}

type Prophecy struct {
	ID                   string                   `protobuf:"bytes,1,opt,name=ID" json:"ID,omitempty"`
	Status               *ProphecyStatus          `protobuf:"bytes,2,opt,name=Status" json:"Status,omitempty"`
	ClaimValidators      map[string]*AddressArray `protobuf:"bytes,3,rep,name=ClaimValidators" json:"ClaimValidators,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	ValidatorClaims      map[string]string        `protobuf:"bytes,4,rep,name=ValidatorClaims" json:"ValidatorClaims,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *Prophecy) Reset()         { *m = Prophecy{} }
func (m *Prophecy) String() string { return proto.CompactTextString(m) }
func (*Prophecy) ProtoMessage()    {}
func (*Prophecy) Descriptor() ([]byte, []int) {
	return fileDescriptor_oracle_fb14737a8765f4ce, []int{2}
}
func (m *Prophecy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Prophecy.Unmarshal(m, b)
}
func (m *Prophecy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Prophecy.Marshal(b, m, deterministic)
}
func (dst *Prophecy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Prophecy.Merge(dst, src)
}
func (m *Prophecy) XXX_Size() int {
	return xxx_messageInfo_Prophecy.Size(m)
}
func (m *Prophecy) XXX_DiscardUnknown() {
	xxx_messageInfo_Prophecy.DiscardUnknown(m)
}

var xxx_messageInfo_Prophecy proto.InternalMessageInfo

func (m *Prophecy) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Prophecy) GetStatus() *ProphecyStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *Prophecy) GetClaimValidators() map[string]*AddressArray {
	if m != nil {
		return m.ClaimValidators
	}
	return nil
}

func (m *Prophecy) GetValidatorClaims() map[string]string {
	if m != nil {
		return m.ValidatorClaims
	}
	return nil
}

func init() {
	proto.RegisterType((*OracleClaim)(nil), "types.OracleClaim")
	proto.RegisterType((*AddressArray)(nil), "types.AddressArray")
	proto.RegisterType((*Prophecy)(nil), "types.Prophecy")
	proto.RegisterMapType((map[string]*AddressArray)(nil), "types.Prophecy.ClaimValidatorsEntry")
	proto.RegisterMapType((map[string]string)(nil), "types.Prophecy.ValidatorClaimsEntry")
}

func init() { proto.RegisterFile("oracle.proto", fileDescriptor_oracle_fb14737a8765f4ce) }

var fileDescriptor_oracle_fb14737a8765f4ce = []byte{
	// 306 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x92, 0xcf, 0x4f, 0x83, 0x30,
	0x14, 0xc7, 0x03, 0xb8, 0xe9, 0xde, 0x96, 0x6d, 0xa9, 0x98, 0x34, 0x9c, 0x08, 0xf1, 0x30, 0x0f,
	0x72, 0x90, 0x8b, 0x31, 0xf1, 0x80, 0xcc, 0xc3, 0x0e, 0xfe, 0x08, 0x26, 0x7a, 0xee, 0x46, 0x23,
	0x44, 0xa4, 0xa4, 0x74, 0x26, 0xf5, 0x0f, 0xf0, 0xef, 0x36, 0xeb, 0xba, 0x05, 0x3b, 0xbc, 0xd1,
	0xbe, 0xcf, 0xfb, 0xbc, 0xef, 0x23, 0x85, 0x11, 0xe3, 0x64, 0x55, 0xd2, 0xb0, 0xe6, 0x4c, 0x30,
	0xd4, 0x13, 0xb2, 0xa6, 0x8d, 0x37, 0xa1, 0x22, 0x5f, 0xf2, 0x22, 0x7b, 0xd7, 0xf7, 0xc1, 0x37,
	0x0c, 0x9f, 0x14, 0x97, 0x94, 0xa4, 0xf8, 0x44, 0x63, 0xb0, 0x17, 0x73, 0x6c, 0xf9, 0xd6, 0x6c,
	0x90, 0xda, 0x8b, 0x39, 0x8a, 0x61, 0xfa, 0x4a, 0xca, 0x22, 0x23, 0x82, 0xf1, 0x38, 0xcb, 0x38,
	0x6d, 0x1a, 0x6c, 0xfb, 0xd6, 0x6c, 0x78, 0x75, 0x16, 0x2a, 0x63, 0x98, 0xe4, 0xa4, 0xa8, 0xa2,
	0x48, 0x17, 0xd3, 0x03, 0x1c, 0x61, 0x38, 0x4e, 0x58, 0x25, 0x68, 0x25, 0xb0, 0xa3, 0xbc, 0xbb,
	0x63, 0xf0, 0x00, 0x23, 0x0d, 0xc5, 0x9c, 0x13, 0x89, 0x6e, 0x61, 0xac, 0x52, 0xec, 0x15, 0xd8,
	0xf2, 0x9d, 0xff, 0x47, 0x19, 0x70, 0xf0, 0xe3, 0xc0, 0xc9, 0x33, 0x67, 0x75, 0x4e, 0x57, 0xf2,
	0x60, 0x91, 0x4b, 0xe8, 0xbf, 0x08, 0x22, 0xd6, 0x66, 0xfc, 0x5d, 0xc3, 0xb6, 0x98, 0x6a, 0x08,
	0x3d, 0xc2, 0xe4, 0xaf, 0xbd, 0xc1, 0x8e, 0xca, 0x72, 0x6e, 0xf4, 0x85, 0x06, 0x76, 0x5f, 0x09,
	0x2e, 0x53, 0xb3, 0x79, 0xe3, 0xdb, 0x9f, 0x54, 0xad, 0xc1, 0x47, 0xdd, 0x3e, 0x03, 0xd3, 0x3e,
	0xe3, 0xd6, 0x7b, 0x03, 0xb7, 0x6b, 0x30, 0x9a, 0x82, 0xf3, 0x41, 0xa5, 0xde, 0x7b, 0xf3, 0x89,
	0x2e, 0xa0, 0xf7, 0x45, 0xca, 0x35, 0xd5, 0x7b, 0x9f, 0xea, 0x79, 0xed, 0x1f, 0x9f, 0x6e, 0x89,
	0x1b, 0xfb, 0xda, 0xf2, 0xee, 0xc0, 0xed, 0x4a, 0xd0, 0x21, 0x76, 0xdb, 0xe2, 0x41, 0xcb, 0xb1,
	0xec, 0xab, 0xa7, 0x15, 0xfd, 0x06, 0x00, 0x00, 0xff, 0xff, 0x23, 0x12, 0xfc, 0x27, 0x82, 0x02,
	0x00, 0x00,
}
